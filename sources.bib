
@article{AlphaBetaPruning2022,
  title = {Alpha\textendash Beta Pruning},
  year = {2022},
  month = jan,
  journal = {Wikipedia},
  url = {https://en.wikipedia.org/w/index.php?title=Alpha%E2%80%93beta_pruning&oldid=1068746141},
  urldate = {2022-02-01},
  abstract = {Alpha\textendash beta pruning is a search algorithm that seeks to decrease the number of nodes that are evaluated by the minimax algorithm in its search tree. It is an adversarial search algorithm used commonly for machine playing of two-player games (Tic-tac-toe, Chess, Connect 4, etc.). It stops evaluating a move when at least one possibility has been found that proves the move to be worse than a previously examined move. Such moves need not be evaluated further. When applied to a standard minimax tree, it returns the same move as minimax would, but prunes away branches that cannot possibly influence the final decision.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1068746141},
  file = {/home/zjeffer/Documents/Zotero/storage/HY5HATSA/Alphaâ€“beta_pruning.html}
}

@article{AlphaZero2022,
  title = {{{AlphaZero}}},
  year = {2022},
  month = jan,
  journal = {Wikipedia},
  url = {https://en.wikipedia.org/w/index.php?title=AlphaZero&oldid=1065791194},
  urldate = {2022-02-01},
  abstract = {AlphaZero is a computer program developed by artificial intelligence research company DeepMind to master the games of chess, shogi and go.  This algorithm uses an approach similar to AlphaGo Zero.  On December 5, 2017, the DeepMind team released a preprint introducing AlphaZero, which within 24 hours of training achieved a superhuman level of play in these three games by defeating world-champion programs Stockfish, elmo, and the three-day version of AlphaGo Zero. In each case it made use of custom tensor processing units (TPUs) that the Google programs were optimized to use. AlphaZero was trained solely via "self-play" using 5,000 first-generation TPUs to generate the games and 64 second-generation TPUs to train the neural networks, all in parallel, with no access to opening books or endgame tables. After four hours of training, DeepMind estimated AlphaZero was playing chess at a higher Elo rating than Stockfish 8; after nine hours of training, the algorithm defeated Stockfish 8 in a time-controlled 100-game tournament (28 wins, 0 losses, and 72 draws). The trained algorithm played on a single machine with four TPUs.  DeepMind's paper on AlphaZero was published in the journal Science on 7 December 2018. In 2019 DeepMind published a new paper detailing MuZero, a new algorithm able to generalise on AlphaZero work, playing both Atari and board games without knowledge of the rules or representations of the game.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1065791194}
}

@misc{BranchingFactorChessprogramming,
  title = {Branching {{Factor}} - {{Chessprogramming}} Wiki},
  url = {https://www.chessprogramming.org/Branching_Factor},
  urldate = {2022-03-28},
  file = {/home/zjeffer/Documents/Zotero/storage/6PJVRU9Q/Branching_Factor.html}
}

@article{ChessEngine2022,
  title = {Chess Engine},
  year = {2022},
  month = apr,
  journal = {Wikipedia},
  url = {https://en.wikipedia.org/w/index.php?title=Chess_engine&oldid=1080874516},
  urldate = {2022-04-05},
  abstract = {In computer chess, a chess engine is a computer program that analyzes chess or chess variant positions, and generates a move or list of moves that it regards as strongest.A chess engine is usually a back end with a command-line interface with no graphics or windowing.  Engines are usually used with a front end, a windowed graphical user interface such as Chessbase or WinBoard that the user can interact with via a keyboard, mouse or touchscreen.  This allows the user to play against multiple engines without learning a new user interface for each, and allows different engines to play against each other. Many chess engines are now available for mobile phones and tablets, making them even more accessible.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1080874516},
  file = {/home/zjeffer/Documents/Zotero/storage/ZNMWQYKQ/Chess_engine.html}
}

@misc{eppesHowComputerizedChess2019,
  title = {How a {{Computerized Chess Opponent}} ``{{Thinks}}'' \textemdash{} {{The Minimax Algorithm}}},
  author = {Eppes, Marissa},
  year = {2019},
  month = oct,
  journal = {Medium},
  url = {https://towardsdatascience.com/how-a-chess-playing-computer-thinks-about-its-next-move-8f028bd0e7b1},
  urldate = {2022-04-05},
  abstract = {In 1997, a computer named ``Deep Blue'' defeated reigning world chess champion Garry Kasparov{$\mkern1mu$}\textemdash{$\mkern1mu$}a defining moment in the history AI theory.},
  langid = {english},
  file = {/home/zjeffer/Documents/Zotero/storage/6HVW2HDS/how-a-chess-playing-computer-thinks-about-its-next-move-8f028bd0e7b1.html}
}

@article{Minimax2022,
  title = {Minimax},
  year = {2022},
  month = mar,
  journal = {Wikipedia},
  url = {https://en.wikipedia.org/w/index.php?title=Minimax&oldid=1076761456},
  urldate = {2022-04-05},
  abstract = {Minimax (sometimes MinMax, MM or saddle point) is a decision rule used in artificial intelligence, decision theory, game theory, statistics, and philosophy for minimizing the possible loss for a worst case (maximum loss) scenario.  When dealing with gains, it is referred to as "maximin"\textemdash to maximize the minimum gain.  Originally formulated for n-player zero-sum game theory, covering both the cases where players take alternate moves and those where they make simultaneous moves, it has also been extended to more complex games and to general decision-making in the presence of uncertainty.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1076761456},
  file = {/home/zjeffer/Documents/Zotero/storage/RV43RPZZ/Minimax.html}
}

@article{StockfishChess2022,
  title = {Stockfish (Chess)},
  year = {2022},
  month = mar,
  journal = {Wikipedia},
  url = {https://en.wikipedia.org/w/index.php?title=Stockfish_(chess)&oldid=1079146589},
  urldate = {2022-03-28},
  abstract = {Stockfish is a free and open-source chess engine, available for various desktop and mobile platforms. It can be used in chess software through the Universal Chess Interface. Stockfish is consistently ranked first or near the top of most chess-engine rating lists and is the strongest CPU chess engine in the world. It has won the Top Chess Engine Championship 11 times. Stockfish is developed by Marco Costalba, Joona Kiiski, Gary Linscott, Tord Romstad, St\'ephane Nicolet, Stefan Geschwentner, and Joost VandeVondele, with many contributions from a community of open-source developers. It is derived from Glaurung, an open-source engine by Tord Romstad released in 2004.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1079146589},
  file = {/home/zjeffer/Documents/Zotero/storage/FPIS5XAZ/Stockfish_(chess).html}
}


